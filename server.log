{"version": "MCP 2025 Gateway", "host": "127.0.0.1", "port": 8000, "event": "application_starting", "logger": "__main__", "level": "info", "timestamp": "2025-07-10T10:01:17.037500Z"}
{"event": "startup_health_checks_begin", "logger": "__main__", "level": "info", "timestamp": "2025-07-10T10:01:17.038267Z"}
{"event": "checking_mcp_server_health", "logger": "__main__", "level": "info", "timestamp": "2025-07-10T10:01:17.038745Z"}
{"builtin_tools": [], "event": "tool_registry_initialized", "logger": "mcp.tool_registry", "level": "info", "timestamp": "2025-07-10T10:01:17.039322Z"}
{"supported_providers": ["openai", "anthropic", "gemini", "openrouter"], "event": "ai_config_tool_initialized", "logger": "mcp.tools.ai_config_tool", "level": "info", "timestamp": "2025-07-10T10:01:17.046185Z"}
{"event": "show_config_tool_initialized", "logger": "mcp.tools.show_config_tool", "level": "info", "timestamp": "2025-07-10T10:01:17.046431Z"}
{"event": "list_models_tool_initialized", "logger": "mcp.tools.list_models_tool", "level": "info", "timestamp": "2025-07-10T10:01:17.046641Z"}
{"event": "switch_provider_tool_initialized", "logger": "mcp.tools.switch_provider_tool", "level": "info", "timestamp": "2025-07-10T10:01:17.046847Z"}
{"event": "parameter_info_tool_initialized", "logger": "mcp.tools.parameter_info_tool", "level": "info", "timestamp": "2025-07-10T10:01:17.047055Z"}
{"event": "reset_config_tool_initialized", "logger": "mcp.tools.reset_config_tool", "level": "info", "timestamp": "2025-07-10T10:01:17.047285Z"}
{"tool_name": "ai_configure", "category": "ai_configuration", "event": "configuration_tool_registered", "logger": "mcp.mcp2025_server", "level": "info", "timestamp": "2025-07-10T10:01:17.047566Z"}
{"tool_name": "show_current_config", "category": "ai_configuration", "event": "configuration_tool_registered", "logger": "mcp.mcp2025_server", "level": "info", "timestamp": "2025-07-10T10:01:17.047861Z"}
{"tool_name": "list_available_models", "category": "ai_configuration", "event": "configuration_tool_registered", "logger": "mcp.mcp2025_server", "level": "info", "timestamp": "2025-07-10T10:01:17.048112Z"}
{"tool_name": "switch_provider", "category": "ai_configuration", "event": "configuration_tool_registered", "logger": "mcp.mcp2025_server", "level": "info", "timestamp": "2025-07-10T10:01:17.048359Z"}
{"tool_name": "get_parameter_info", "category": "ai_configuration", "event": "configuration_tool_registered", "logger": "mcp.mcp2025_server", "level": "info", "timestamp": "2025-07-10T10:01:17.048600Z"}
{"tool_name": "reset_config", "category": "ai_configuration", "event": "configuration_tool_registered", "logger": "mcp.mcp2025_server", "level": "info", "timestamp": "2025-07-10T10:01:17.048851Z"}
{"tools_count": 6, "event": "all_configuration_tools_registered", "logger": "mcp.mcp2025_server", "level": "info", "timestamp": "2025-07-10T10:01:17.049036Z"}
{"message": "MCP 2025 compliant server initialized", "protocol_version": "2025-06-18", "capabilities": {"experimental": null, "logging": {}, "tools": {"listChanged": true}, "resources": null, "prompts": null, "completion": null}, "event": "mcp2025_server_initialized", "logger": "mcp.mcp2025_server", "level": "info", "timestamp": "2025-07-10T10:01:17.049373Z"}
{"active_provider": "openai", "model": "gpt-4o-mini", "event": "mcp_health_check_passed", "logger": "__main__", "level": "info", "timestamp": "2025-07-10T10:01:17.052871Z"}
{"event": "validating_configuration", "logger": "__main__", "level": "info", "timestamp": "2025-07-10T10:01:17.053085Z"}
{"gateway_host": "127.0.0.1", "gateway_port": 8000, "active_provider": "openai", "event": "config_validation_passed", "logger": "__main__", "level": "info", "timestamp": "2025-07-10T10:01:17.053264Z"}
{"message": "All startup checks passed successfully", "event": "startup_health_checks_passed", "logger": "__main__", "level": "info", "timestamp": "2025-07-10T10:01:17.053403Z"}
{"message": "OpenAI adapter initialized with MCP server", "has_mcp_server": true, "event": "openai_adapter_initialized", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:17.163766Z"}
{"message": "OpenAI adapter initialized with MCP server", "event": "openai_adapter_loaded", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:17.164639Z"}
{"message": "Anthropic adapter initialized with MCP server", "has_mcp_server": true, "event": "anthropic_adapter_initialized", "logger": "adapters.anthropic_adapter", "level": "info", "timestamp": "2025-07-10T10:01:17.222674Z"}
{"message": "Anthropic adapter initialized with MCP server", "event": "anthropic_adapter_loaded", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:17.222898Z"}
{"message": "Gemini adapter initialized with MCP server", "has_mcp_server": true, "event": "gemini_adapter_initialized", "logger": "adapters.gemini_adapter", "level": "info", "timestamp": "2025-07-10T10:01:17.223122Z"}
{"message": "Gemini adapter initialized with MCP server", "event": "gemini_adapter_loaded", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:17.223246Z"}
{"message": "OpenRouter adapter initialized with MCP server", "has_mcp_server": true, "event": "openrouter_adapter_initialized", "logger": "adapters.openrouter_adapter", "level": "info", "timestamp": "2025-07-10T10:01:17.275388Z"}
{"message": "OpenRouter adapter initialized with MCP server", "event": "openrouter_adapter_loaded", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:17.275689Z"}
{"message": "Adapters initialized successfully", "adapters": ["openai", "anthropic", "gemini", "openrouter"], "total_adapters": 4, "event": "adapters_initialized", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:17.275844Z"}
{"message": "Router initialized with MCP server for dynamic configuration", "timeout": 60, "max_retries": 3, "available_providers": ["openai", "anthropic", "gemini", "openrouter"], "active_provider": "openai", "has_mcp_server": true, "event": "router_initialized", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:17.276002Z"}
{"host": "127.0.0.1", "port": 8000, "event": "starting_server", "logger": "__main__", "level": "info", "timestamp": "2025-07-10T10:01:17.276885Z"}
Started server process [94801]
Waiting for application startup.
Application startup complete.
Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
127.0.0.1:47640 - "WebSocket /ws/chat" [accepted]
{"message": "WebSocket connection established", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "user_id": null, "total_connections": 1, "event": "connection_established", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:23.699565Z"}
connection open
{"message": "Processing WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "action": "chat", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "message_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:28.725928Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "processing", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": false, "chunk_type": null, "chunk_data_length": 0, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:28.726981Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 101, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"processing\",\"chunk\":null,\"error\":null}", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:28.728186Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:28.729331Z"}
{"message": "Starting router processing", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "request_type": "chat", "payload_keys": ["text"], "event": "router_processing_start", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:28.729614Z"}
{"message": "Active provider selected from MCP server", "provider": "openai", "event": "active_provider_selected", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:28.730077Z"}
{"message": "Retrieving MCP tools from MCP server", "requested_tools": null, "event": "getting_mcp_tools", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:28.730263Z"}
{"message": "Returning all available MCP tools", "tools_count": 6, "tools": ["ai_configure", "show_current_config", "list_available_models", "switch_provider", "get_parameter_info", "reset_config"], "event": "mcp_tools_returned", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:28.730467Z"}
{"message": "Retrieved MCP tools for chat request", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "mcp_tools_available": true, "mcp_tools_count": 6, "mcp_tool_names": ["ai_configure", "show_current_config", "list_available_models", "switch_provider", "get_parameter_info", "reset_config"], "detailed_tools": [{"name": "ai_configure", "description": "Configure AI model parameters. The LLM will interpret your request and apply appropriate changes.", "inputSchema": {"type": "object", "properties": {"provider": {"type": "string", "description": "Target provider (openai, anthropic, gemini, openrouter). If not specified, applies to current provider."}, "parameter": {"type": "string", "description": "Parameter to change (temperature, max_tokens, system_prompt, model)"}, "value": {"type": "string", "description": "New value for the parameter. Can be a number, string, or special value like 'default'"}}, "required": ["parameter", "value"]}}, {"name": "show_current_config", "description": "Display current AI configuration including provider, model, and all parameter settings. Shows which values differ from defaults and provides valid ranges.", "inputSchema": {"type": "object", "properties": {"verbose": {"type": "boolean", "description": "Include detailed parameter descriptions and constraints", "default": false}, "format": {"type": "string", "description": "Output format for the configuration", "enum": ["detailed", "compact", "json"], "default": "detailed"}}, "required": []}}, {"name": "list_available_models", "description": "List all available AI models across all supported providers. Shows which models are available and indicates the currently active model.", "inputSchema": {"type": "object", "properties": {"provider": {"type": "string", "description": "Filter results to show models for a specific provider only", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "format": {"type": "string", "description": "Output format for the model list", "enum": ["grouped", "flat", "json"], "default": "grouped"}}, "required": []}}, {"name": "switch_provider", "description": "Switch the active AI provider. Requires confirmation before making the change. Shows comparison between current and target provider.", "inputSchema": {"type": "object", "properties": {"provider": {"type": "string", "description": "Target provider to switch to", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "confirm": {"type": "boolean", "description": "Explicit confirmation to proceed with the switch", "default": false}, "model": {"type": "string", "description": "Optional: specific model to use with the new provider"}}, "required": ["provider"]}}, {"name": "get_parameter_info", "description": "Get detailed information about AI configuration parameters including valid ranges, constraints, and provider-specific differences.", "inputSchema": {"type": "object", "properties": {"parameter": {"type": "string", "description": "Specific parameter to get info about (e.g., 'temperature', 'max_tokens'). Leave empty for all parameters."}, "provider": {"type": "string", "description": "Provider to get parameter info for. Uses current provider if not specified.", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "compare": {"type": "boolean", "description": "Compare parameter constraints across all providers", "default": false}}, "required": []}}, {"name": "reset_config", "description": "Reset AI configuration parameters to their default values. Requires confirmation before making changes.", "inputSchema": {"type": "object", "properties": {"provider": {"type": "string", "description": "Provider to reset. Uses current provider if not specified.", "enum": ["openai", "anthropic", "gemini", "openrouter", "all"]}, "confirm": {"type": "boolean", "description": "Explicit confirmation to proceed with the reset", "default": false}, "parameters": {"type": "array", "description": "Specific parameters to reset. If not provided, all parameters will be reset.", "items": {"type": "string", "description": "Parameter name to reset"}}}, "required": []}}], "event": "mcp_tools_retrieved", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:28.730615Z"}
{"message": "Created adapter request with MCP tools", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "adapter_request_has_tools": true, "adapter_request_tool_count": 6, "messages_count": 1, "temperature": 0.8, "max_tokens": 2000, "event": "adapter_request_created", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:28.730935Z"}
{"message": "Processing chat request with openai", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "input_length": 39, "provider": "openai", "has_tools": true, "tool_count": 6, "event": "chat_request_start", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:28.731110Z"}
{"message": "Configured OpenAI tools from MCP", "mcp_tools_count": 6, "openai_tools_count": 6, "mcp_tool_names": ["ai_configure", "show_current_config", "list_available_models", "switch_provider", "get_parameter_info", "reset_config"], "openai_tools_names": ["ai_configure", "show_current_config", "list_available_models", "switch_provider", "get_parameter_info", "reset_config"], "detailed_mcp_tools": [{"name": "ai_configure", "description": "Configure AI model parameters. The LLM will interpret your request and apply appropriate changes.", "inputSchema": {"type": "object", "properties": {"provider": {"type": "string", "description": "Target provider (openai, anthropic, gemini, openrouter). If not specified, applies to current provider."}, "parameter": {"type": "string", "description": "Parameter to change (temperature, max_tokens, system_prompt, model)"}, "value": {"type": "string", "description": "New value for the parameter. Can be a number, string, or special value like 'default'"}}, "required": ["parameter", "value"]}}, {"name": "show_current_config", "description": "Display current AI configuration including provider, model, and all parameter settings. Shows which values differ from defaults and provides valid ranges.", "inputSchema": {"type": "object", "properties": {"verbose": {"type": "boolean", "description": "Include detailed parameter descriptions and constraints", "default": false}, "format": {"type": "string", "description": "Output format for the configuration", "enum": ["detailed", "compact", "json"], "default": "detailed"}}, "required": []}}, {"name": "list_available_models", "description": "List all available AI models across all supported providers. Shows which models are available and indicates the currently active model.", "inputSchema": {"type": "object", "properties": {"provider": {"type": "string", "description": "Filter results to show models for a specific provider only", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "format": {"type": "string", "description": "Output format for the model list", "enum": ["grouped", "flat", "json"], "default": "grouped"}}, "required": []}}, {"name": "switch_provider", "description": "Switch the active AI provider. Requires confirmation before making the change. Shows comparison between current and target provider.", "inputSchema": {"type": "object", "properties": {"provider": {"type": "string", "description": "Target provider to switch to", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "confirm": {"type": "boolean", "description": "Explicit confirmation to proceed with the switch", "default": false}, "model": {"type": "string", "description": "Optional: specific model to use with the new provider"}}, "required": ["provider"]}}, {"name": "get_parameter_info", "description": "Get detailed information about AI configuration parameters including valid ranges, constraints, and provider-specific differences.", "inputSchema": {"type": "object", "properties": {"parameter": {"type": "string", "description": "Specific parameter to get info about (e.g., 'temperature', 'max_tokens'). Leave empty for all parameters."}, "provider": {"type": "string", "description": "Provider to get parameter info for. Uses current provider if not specified.", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "compare": {"type": "boolean", "description": "Compare parameter constraints across all providers", "default": false}}, "required": []}}, {"name": "reset_config", "description": "Reset AI configuration parameters to their default values. Requires confirmation before making changes.", "inputSchema": {"type": "object", "properties": {"provider": {"type": "string", "description": "Provider to reset. Uses current provider if not specified.", "enum": ["openai", "anthropic", "gemini", "openrouter", "all"]}, "confirm": {"type": "boolean", "description": "Explicit confirmation to proceed with the reset", "default": false}, "parameters": {"type": "array", "description": "Specific parameters to reset. If not provided, all parameters will be reset.", "items": {"type": "string", "description": "Parameter name to reset"}}}, "required": []}}], "detailed_openai_tools": [{"type": "function", "function": {"name": "ai_configure", "description": "Configure AI model parameters. The LLM will interpret your request and apply appropriate changes.", "parameters": {"type": "object", "properties": {"provider": {"type": "string", "description": "Target provider (openai, anthropic, gemini, openrouter). If not specified, applies to current provider."}, "parameter": {"type": "string", "description": "Parameter to change (temperature, max_tokens, system_prompt, model)"}, "value": {"type": "string", "description": "New value for the parameter. Can be a number, string, or special value like 'default'"}}, "required": ["parameter", "value"]}}}, {"type": "function", "function": {"name": "show_current_config", "description": "Display current AI configuration including provider, model, and all parameter settings. Shows which values differ from defaults and provides valid ranges.", "parameters": {"type": "object", "properties": {"verbose": {"type": "boolean", "description": "Include detailed parameter descriptions and constraints", "default": false}, "format": {"type": "string", "description": "Output format for the configuration", "enum": ["detailed", "compact", "json"], "default": "detailed"}}, "required": []}}}, {"type": "function", "function": {"name": "list_available_models", "description": "List all available AI models across all supported providers. Shows which models are available and indicates the currently active model.", "parameters": {"type": "object", "properties": {"provider": {"type": "string", "description": "Filter results to show models for a specific provider only", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "format": {"type": "string", "description": "Output format for the model list", "enum": ["grouped", "flat", "json"], "default": "grouped"}}, "required": []}}}, {"type": "function", "function": {"name": "switch_provider", "description": "Switch the active AI provider. Requires confirmation before making the change. Shows comparison between current and target provider.", "parameters": {"type": "object", "properties": {"provider": {"type": "string", "description": "Target provider to switch to", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "confirm": {"type": "boolean", "description": "Explicit confirmation to proceed with the switch", "default": false}, "model": {"type": "string", "description": "Optional: specific model to use with the new provider"}}, "required": ["provider"]}}}, {"type": "function", "function": {"name": "get_parameter_info", "description": "Get detailed information about AI configuration parameters including valid ranges, constraints, and provider-specific differences.", "parameters": {"type": "object", "properties": {"parameter": {"type": "string", "description": "Specific parameter to get info about (e.g., 'temperature', 'max_tokens'). Leave empty for all parameters."}, "provider": {"type": "string", "description": "Provider to get parameter info for. Uses current provider if not specified.", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "compare": {"type": "boolean", "description": "Compare parameter constraints across all providers", "default": false}}, "required": []}}}, {"type": "function", "function": {"name": "reset_config", "description": "Reset AI configuration parameters to their default values. Requires confirmation before making changes.", "parameters": {"type": "object", "properties": {"provider": {"type": "string", "description": "Provider to reset. Uses current provider if not specified.", "enum": ["openai", "anthropic", "gemini", "openrouter", "all"]}, "confirm": {"type": "boolean", "description": "Explicit confirmation to proceed with the reset", "default": false}, "parameters": {"type": "array", "description": "Specific parameters to reset. If not provided, all parameters will be reset.", "items": {"type": "string", "description": "Parameter name to reset"}}}, "required": []}}}], "event": "openai_tools_configured", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:28.731394Z"}
{"message": "Prepared request for OpenAI API", "model": "gpt-4o-mini", "temperature": 0.8, "messages_count": 2, "has_tools": true, "tools_count": 6, "tool_choice": "auto", "max_tokens": 2000, "stream": true, "full_request_params": {"model": "gpt-4o-mini", "messages": [{"role": "system", "content": "You are a helpful AI assistant"}, {"role": "user", "content": "Please use the show_current_config tool"}], "temperature": 0.8, "stream": true, "max_tokens": 2000, "tools": [{"type": "function", "function": {"name": "ai_configure", "description": "Configure AI model parameters. The LLM will interpret your request and apply appropriate changes.", "parameters": {"type": "object", "properties": {"provider": {"type": "string", "description": "Target provider (openai, anthropic, gemini, openrouter). If not specified, applies to current provider."}, "parameter": {"type": "string", "description": "Parameter to change (temperature, max_tokens, system_prompt, model)"}, "value": {"type": "string", "description": "New value for the parameter. Can be a number, string, or special value like 'default'"}}, "required": ["parameter", "value"]}}}, {"type": "function", "function": {"name": "show_current_config", "description": "Display current AI configuration including provider, model, and all parameter settings. Shows which values differ from defaults and provides valid ranges.", "parameters": {"type": "object", "properties": {"verbose": {"type": "boolean", "description": "Include detailed parameter descriptions and constraints", "default": false}, "format": {"type": "string", "description": "Output format for the configuration", "enum": ["detailed", "compact", "json"], "default": "detailed"}}, "required": []}}}, {"type": "function", "function": {"name": "list_available_models", "description": "List all available AI models across all supported providers. Shows which models are available and indicates the currently active model.", "parameters": {"type": "object", "properties": {"provider": {"type": "string", "description": "Filter results to show models for a specific provider only", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "format": {"type": "string", "description": "Output format for the model list", "enum": ["grouped", "flat", "json"], "default": "grouped"}}, "required": []}}}, {"type": "function", "function": {"name": "switch_provider", "description": "Switch the active AI provider. Requires confirmation before making the change. Shows comparison between current and target provider.", "parameters": {"type": "object", "properties": {"provider": {"type": "string", "description": "Target provider to switch to", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "confirm": {"type": "boolean", "description": "Explicit confirmation to proceed with the switch", "default": false}, "model": {"type": "string", "description": "Optional: specific model to use with the new provider"}}, "required": ["provider"]}}}, {"type": "function", "function": {"name": "get_parameter_info", "description": "Get detailed information about AI configuration parameters including valid ranges, constraints, and provider-specific differences.", "parameters": {"type": "object", "properties": {"parameter": {"type": "string", "description": "Specific parameter to get info about (e.g., 'temperature', 'max_tokens'). Leave empty for all parameters."}, "provider": {"type": "string", "description": "Provider to get parameter info for. Uses current provider if not specified.", "enum": ["openai", "anthropic", "gemini", "openrouter"]}, "compare": {"type": "boolean", "description": "Compare parameter constraints across all providers", "default": false}}, "required": []}}}, {"type": "function", "function": {"name": "reset_config", "description": "Reset AI configuration parameters to their default values. Requires confirmation before making changes.", "parameters": {"type": "object", "properties": {"provider": {"type": "string", "description": "Provider to reset. Uses current provider if not specified.", "enum": ["openai", "anthropic", "gemini", "openrouter", "all"]}, "confirm": {"type": "boolean", "description": "Explicit confirmation to proceed with the reset", "default": false}, "parameters": {"type": "array", "description": "Specific parameters to reset. If not provided, all parameters will be reset.", "items": {"type": "string", "description": "Parameter name to reset"}}}, "required": []}}}], "tool_choice": "auto"}, "event": "openai_request_prepared", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:28.732009Z"}
HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
{"message": "Received chunk from OpenAI", "chunk_number": 1, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:29.988704Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 1, "has_content": false, "content_length": 0, "content_preview": null, "has_tool_calls": true, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:29.989409Z"}
{"message": "OpenAI tool calls detected in delta", "chunk_number": 1, "tool_calls_count": 1, "raw_tool_calls": [{"id": "call_cTNupFuSsKgbCzti6g0ubZpy", "type": "function", "function_name": "show_current_config", "function_args": ""}], "event": "openai_tool_calls_detected", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:29.990097Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 2, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:29.992677Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 2, "has_content": false, "content_length": 0, "content_preview": null, "has_tool_calls": true, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:29.993295Z"}
{"message": "OpenAI tool calls detected in delta", "chunk_number": 2, "tool_calls_count": 1, "raw_tool_calls": [{"id": null, "type": null, "function_name": null, "function_args": "{\""}], "event": "openai_tool_calls_detected", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:29.994004Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 3, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:29.996484Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 3, "has_content": false, "content_length": 0, "content_preview": null, "has_tool_calls": true, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:29.997291Z"}
{"message": "OpenAI tool calls detected in delta", "chunk_number": 3, "tool_calls_count": 1, "raw_tool_calls": [{"id": null, "type": null, "function_name": null, "function_args": "verbose"}], "event": "openai_tool_calls_detected", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:29.997974Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 4, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.000683Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 4, "has_content": false, "content_length": 0, "content_preview": null, "has_tool_calls": true, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.001423Z"}
{"message": "OpenAI tool calls detected in delta", "chunk_number": 4, "tool_calls_count": 1, "raw_tool_calls": [{"id": null, "type": null, "function_name": null, "function_args": "\":"}], "event": "openai_tool_calls_detected", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.002119Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 5, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.004167Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 5, "has_content": false, "content_length": 0, "content_preview": null, "has_tool_calls": true, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.004939Z"}
{"message": "OpenAI tool calls detected in delta", "chunk_number": 5, "tool_calls_count": 1, "raw_tool_calls": [{"id": null, "type": null, "function_name": null, "function_args": "true"}], "event": "openai_tool_calls_detected", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.005606Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 6, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.009547Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 6, "has_content": false, "content_length": 0, "content_preview": null, "has_tool_calls": true, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.010325Z"}
{"message": "OpenAI tool calls detected in delta", "chunk_number": 6, "tool_calls_count": 1, "raw_tool_calls": [{"id": null, "type": null, "function_name": null, "function_args": "}"}], "event": "openai_tool_calls_detected", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.011073Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 7, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.014932Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 7, "has_content": false, "content_length": 0, "content_preview": null, "has_tool_calls": false, "finish_reason": "tool_calls", "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.015832Z"}
{"message": "OpenAI completion received", "chunk_number": 7, "finish_reason": "tool_calls", "total_chunks_processed": 7, "remaining_scratch_calls": 2, "event": "openai_completion", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.016582Z"}
{"message": "Finalizing remaining tool calls", "tool_count": 2, "tool_calls_data": [{"id": "call_cTNupFuSsKgbCzti6g0ubZpy", "name": "show_current_config", "arguments": ""}, {"id": "auto_0", "name": "unknown_function", "arguments": "{\"verbose\":true}"}], "event": "openai_finalizing_remaining_calls", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.017436Z"}
{"message": "Received response from adapter", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": false, "content_length": 0, "has_tool_calls": true, "has_finish_reason": false, "metadata": {"type": "tool_calls"}, "event": "adapter_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:30.018253Z"}
{"message": "Executing tool calls locally via MCP 2025 protocol", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "tool_count": 2, "tool_names": ["show_current_config", "unknown_function"], "event": "tool_calls_received_for_mcp_execution", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:30.018902Z"}
{"message": "Executing tool call via MCP 2025 protocol", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "tool_name": "show_current_config", "tool_id": "call_cTNupFuSsKgbCzti6g0ubZpy", "event": "executing_tool_via_mcp2025", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:30.019517Z"}
{"tool_name": "show_current_config", "error": "Argument validation failed: Unknown parameter 'request'", "event": "tool_execution_failed", "logger": "mcp.mcp2025_server", "level": "warning", "timestamp": "2025-07-10T10:01:30.020565Z"}
{"message": "Tool executed successfully via MCP 2025", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "tool_name": "show_current_config", "content_types": ["text"], "event": "mcp_tool_execution_success", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:30.021225Z"}
{"message": "Executing tool call via MCP 2025 protocol", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "tool_name": "unknown_function", "tool_id": "auto_0", "event": "executing_tool_via_mcp2025", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:30.021751Z"}
{"tool_name": "unknown_function", "error": "Tool 'unknown_function' not found. Available tools: ['ai_configure', 'show_current_config', 'list_available_models', 'switch_provider', 'get_parameter_info', 'reset_config']", "event": "tool_execution_failed", "logger": "mcp.mcp2025_server", "level": "warning", "timestamp": "2025-07-10T10:01:30.022718Z"}
{"message": "Tool executed successfully via MCP 2025", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "tool_name": "unknown_function", "content_types": ["text"], "event": "mcp_tool_execution_success", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:30.023397Z"}
{"message": "Continuing conversation with LLM after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "tool_results_count": 2, "successful_tools": 2, "event": "continuing_conversation_with_mcp_results", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:30.024054Z"}
{"message": "No MCP tools provided to OpenAI adapter", "request_has_mcp_tools": false, "event": "openai_no_tools", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.024850Z"}
{"message": "Prepared request for OpenAI API", "model": "gpt-4o-mini", "temperature": 0.8, "messages_count": 5, "has_tools": false, "tools_count": 0, "tool_choice": null, "max_tokens": 2000, "stream": true, "full_request_params": {"model": "gpt-4o-mini", "messages": [{"role": "system", "content": "You are a helpful AI assistant"}, {"role": "user", "content": "Please use the show_current_config tool"}, {"role": "assistant", "content": "", "tool_calls": [{"id": "call_cTNupFuSsKgbCzti6g0ubZpy", "type": "function", "function": {"name": "show_current_config", "arguments": ""}}, {"id": "auto_0", "type": "function", "function": {"name": "unknown_function", "arguments": "{\"verbose\":true}"}}]}, {"role": "tool", "tool_call_id": "call_cTNupFuSsKgbCzti6g0ubZpy", "content": "Argument validation failed: Unknown parameter 'request'"}, {"role": "tool", "tool_call_id": "auto_0", "content": "Tool 'unknown_function' not found. Available tools: ['ai_configure', 'show_current_config', 'list_available_models', 'switch_provider', 'get_parameter_info', 'reset_config']"}], "temperature": 0.8, "stream": true, "max_tokens": 2000}, "event": "openai_request_prepared", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:30.025395Z"}
HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
{"message": "Received chunk from OpenAI", "chunk_number": 1, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.821704Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 1, "has_content": false, "content_length": 0, "content_preview": null, "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.822292Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 2, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.824544Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 2, "has_content": true, "content_length": 2, "content_preview": "It", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.825331Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 2, "content_length": 2, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.826003Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 2, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.827021Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 2, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.827836Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 1, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.828487Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 2, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.829114Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 293, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\"It\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"mc...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.829902Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.831378Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 1, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.832398Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 3, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.835270Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 3, "has_content": true, "content_length": 6, "content_preview": " seems", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.835936Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 3, "content_length": 6, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.836572Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 6, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.837130Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 6, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.837970Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 2, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.838701Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 6, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.839399Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 297, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" seems\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.840593Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.841513Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 2, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.842013Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 4, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.846078Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 4, "has_content": true, "content_length": 5, "content_preview": " that", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.846983Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 4, "content_length": 5, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.847645Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 5, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.848304Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 5, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.848925Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 3, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.849717Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 5, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.850285Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 296, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" that\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.851030Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.852453Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 3, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.853153Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 5, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.855459Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 5, "has_content": true, "content_length": 6, "content_preview": " there", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.856357Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 5, "content_length": 6, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.857021Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 6, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.857660Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 6, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.858563Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 4, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.859219Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 6, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.859771Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 297, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" there\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.860519Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.861415Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 4, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.862020Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 6, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.869113Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 6, "has_content": true, "content_length": 4, "content_preview": " was", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.873381Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 6, "content_length": 4, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.874617Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 4, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.878010Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 4, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.879295Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 5, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.880315Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 4, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.880938Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 295, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" was\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.881586Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.885729Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 5, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.886401Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 7, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.891748Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 7, "has_content": true, "content_length": 3, "content_preview": " an", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.896139Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 7, "content_length": 3, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.897393Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 3, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.898081Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 3, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.898733Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 6, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.899297Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 3, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.902846Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 294, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" an\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"m...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.907037Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.907755Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 6, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.908125Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 8, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.910875Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 8, "has_content": true, "content_length": 6, "content_preview": " error", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.911634Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 8, "content_length": 6, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.912096Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 6, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.912403Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 6, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.912762Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 7, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.913088Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 6, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.913373Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 297, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" error\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.913751Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.914999Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 7, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.915564Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 9, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.916865Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 9, "has_content": true, "content_length": 7, "content_preview": " trying", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.917498Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 9, "content_length": 7, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.918052Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 7, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.918387Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 7, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.919388Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 8, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.920375Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 7, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.920936Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 298, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" trying\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.921449Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.922148Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 8, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.922587Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 10, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.924391Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 10, "has_content": true, "content_length": 3, "content_preview": " to", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.924725Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 10, "content_length": 3, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.925046Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 3, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.925259Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 3, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.925558Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 9, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.925850Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 3, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.926147Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 294, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" to\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"m...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.926423Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.926818Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 9, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.927045Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 11, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.927916Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 11, "has_content": true, "content_length": 4, "content_preview": " use", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.928252Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 11, "content_length": 4, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.928513Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 4, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.928758Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 4, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.929186Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 10, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.929533Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 4, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.929811Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 295, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" use\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.930224Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.930734Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 10, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.931060Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 12, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.961474Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 12, "has_content": true, "content_length": 4, "content_preview": " the", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.963269Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 12, "content_length": 4, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.964105Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 4, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.965032Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 4, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.965628Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 11, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.966508Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 4, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.966685Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 295, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" the\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.968027Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.969022Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 11, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.970205Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 13, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.971891Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 13, "has_content": true, "content_length": 2, "content_preview": " `", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.973483Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 13, "content_length": 2, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:31.974538Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 2, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.974753Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 2, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:31.975822Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 12, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.976908Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 2, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.977350Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 293, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" `\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"mc...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.977790Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:31.978302Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 12, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:31.978663Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 14, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.008197Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 14, "has_content": true, "content_length": 4, "content_preview": "show", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.008575Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 14, "content_length": 4, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.008745Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 4, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.008911Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 4, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.009110Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 13, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.009278Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 4, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.009433Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 295, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\"show\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.009638Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.009935Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 13, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.010247Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 15, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.010962Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 15, "has_content": true, "content_length": 8, "content_preview": "_current", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.011189Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 15, "content_length": 8, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.011380Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 8, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.011529Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 8, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.011722Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 14, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.011911Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 8, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.012067Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 299, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\"_current\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanatio...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.012282Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.012796Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 14, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.013010Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 16, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.028407Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 16, "has_content": true, "content_length": 7, "content_preview": "_config", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.028632Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 16, "content_length": 7, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.028822Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 7, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.029138Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 7, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.029365Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 15, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.029589Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 7, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.029769Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 298, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\"_config\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.030007Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.030271Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 15, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.030421Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 17, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.031125Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 17, "has_content": true, "content_length": 1, "content_preview": "`", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.031289Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 17, "content_length": 1, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.031467Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 1, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.031629Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 1, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.031841Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 16, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.032014Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 1, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.032176Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 292, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\"`\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"mcp...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.032403Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.032641Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 16, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.032773Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 18, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.082798Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 18, "has_content": true, "content_length": 5, "content_preview": " tool", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.084928Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 18, "content_length": 5, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.085937Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 5, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.086837Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 5, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.087959Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 17, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.088494Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 5, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.089050Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 296, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" tool\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.089515Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.089909Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 17, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.090297Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 19, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.091103Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 19, "has_content": true, "content_length": 1, "content_preview": ".", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.091383Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 19, "content_length": 1, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.091740Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 1, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.091977Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 1, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.092239Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 18, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.092574Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 1, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.092893Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 292, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\".\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"mcp...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.093488Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.100612Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 18, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.100842Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 20, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.127510Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 20, "has_content": true, "content_length": 8, "content_preview": " However", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.127753Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 20, "content_length": 8, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.127929Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 8, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.128042Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 8, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.128183Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 19, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.128300Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 8, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.128407Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 299, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" However\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanatio...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.130117Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.130558Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 19, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.130903Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 21, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.132123Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 21, "has_content": true, "content_length": 1, "content_preview": ",", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.132581Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 21, "content_length": 1, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.132971Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 1, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.133212Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 1, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.133593Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 20, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.134093Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 1, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.134551Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 292, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\",\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"mcp...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.135420Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.135817Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 20, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.136180Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 22, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.148987Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 22, "has_content": true, "content_length": 2, "content_preview": " I", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.149388Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 22, "content_length": 2, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.149815Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 2, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.150244Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 2, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.151030Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 21, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.151433Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 2, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.151630Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 293, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" I\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"mc...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.151902Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.152178Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 21, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.152323Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 23, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.152932Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 23, "has_content": true, "content_length": 4, "content_preview": " can", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.153099Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 23, "content_length": 4, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.153257Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 4, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.153395Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 4, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.153567Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 22, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.153719Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 4, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.153905Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 295, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" can\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.154226Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.154510Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 22, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.154647Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 24, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.168962Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 24, "has_content": true, "content_length": 5, "content_preview": " help", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.169609Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 24, "content_length": 5, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.169852Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 5, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.170032Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 5, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.170234Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 23, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.170417Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 5, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.170586Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 296, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" help\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.170803Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.171102Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 23, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.171248Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 25, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.171896Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 25, "has_content": true, "content_length": 4, "content_preview": " you", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.172195Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 25, "content_length": 4, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.172368Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 4, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.172510Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 4, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.172678Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 24, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.172860Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 4, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.172998Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 295, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" you\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.173180Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.173462Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 24, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.173607Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 26, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.178409Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 26, "has_content": true, "content_length": 5, "content_preview": " with", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.178653Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 26, "content_length": 5, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.178822Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 5, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.180360Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 5, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.180669Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 25, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.180860Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 5, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.181025Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 296, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" with\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.181246Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.181526Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 25, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.181672Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 27, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.184221Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 27, "has_content": true, "content_length": 4, "content_preview": " any", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.184559Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 27, "content_length": 4, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.184770Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 4, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.184976Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 4, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.185206Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 26, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.185350Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 4, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.185480Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 295, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" any\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.185680Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.186010Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 26, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.190363Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 28, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.213686Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 28, "has_content": true, "content_length": 9, "content_preview": " specific", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.214419Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 28, "content_length": 9, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.214811Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 9, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.215075Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 9, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.215345Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 27, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.215591Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 9, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.215800Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 300, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" specific\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanati...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.216058Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.216398Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 27, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.216617Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 29, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.217148Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 29, "has_content": true, "content_length": 10, "content_preview": " questions", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.217440Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 29, "content_length": 10, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.217665Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 10, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.217873Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 10, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.218120Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 28, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.218324Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 10, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.218550Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 301, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" questions\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanat...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.218771Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.219122Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 28, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.219322Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 30, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.233534Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 30, "has_content": true, "content_length": 4, "content_preview": " you", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.233771Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 30, "content_length": 4, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.236067Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 4, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.236230Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 4, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.236409Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 29, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.237972Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 4, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.238154Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 295, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" you\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.238348Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.238605Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 29, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.238751Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 31, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.239400Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 31, "has_content": true, "content_length": 5, "content_preview": " have", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.239587Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 31, "content_length": 5, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.239760Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 5, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.239938Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 5, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.240127Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 30, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.240282Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 5, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.240428Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 296, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" have\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.240615Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.240882Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 30, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.241030Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 32, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.255080Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 32, "has_content": true, "content_length": 3, "content_preview": " or", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.255321Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 32, "content_length": 3, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.255494Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 3, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.255647Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 3, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.255844Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 31, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.256001Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 3, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.256216Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 294, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" or\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"m...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.256402Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.256662Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 31, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.256918Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 33, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.257596Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 33, "has_content": true, "content_length": 8, "content_preview": " provide", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.257902Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 33, "content_length": 8, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.258200Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 8, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.258453Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 8, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.258739Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 32, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.259270Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 8, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.259562Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 299, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" provide\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanatio...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.259849Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.260221Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 32, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.260500Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 34, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.277801Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 34, "has_content": true, "content_length": 12, "content_preview": " information", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.279598Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 34, "content_length": 12, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.280488Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 12, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.280897Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 12, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.281253Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 33, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.281816Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 12, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.282036Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 303, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" information\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explan...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.282248Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.284040Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 33, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.284321Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 35, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.285429Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 35, "has_content": true, "content_length": 6, "content_preview": " about", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.285822Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 35, "content_length": 6, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.286164Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 6, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.286461Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 6, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.286817Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 34, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.287017Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 6, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.287262Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 297, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" about\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.287476Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.287761Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 34, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.287933Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 36, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.308588Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 36, "has_content": true, "content_length": 15, "content_preview": " configurations", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.308845Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 36, "content_length": 15, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.309010Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 15, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.309157Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 15, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.309328Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 35, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.309471Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 15, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.309604Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 306, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" configurations\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_exp...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.309785Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.310076Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 35, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.310237Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 37, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.311158Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 37, "has_content": true, "content_length": 1, "content_preview": ".", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.311444Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 37, "content_length": 1, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.311725Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 1, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.312033Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 1, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.312423Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 36, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.312728Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 1, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.313025Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 292, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\".\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"mcp...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.313234Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.313507Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 36, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.313662Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 38, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.325058Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 38, "has_content": true, "content_length": 7, "content_preview": " Please", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.327259Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 38, "content_length": 7, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.328818Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 7, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.329314Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 7, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.329843Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 37, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.330310Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 7, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.330726Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 298, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" Please\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.333004Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.333811Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 37, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.334448Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 39, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.335709Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 39, "has_content": true, "content_length": 4, "content_preview": " let", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.336751Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 39, "content_length": 4, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.337236Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 4, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.337554Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 4, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.337998Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 38, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.338285Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 4, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.338646Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 295, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" let\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.339143Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.339478Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 38, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.339658Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 40, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.348536Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 40, "has_content": true, "content_length": 3, "content_preview": " me", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.352507Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 40, "content_length": 3, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.354152Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 3, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.355197Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 3, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.355466Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 39, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.355652Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 3, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.355825Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 294, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" me\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"m...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.356015Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.356234Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 39, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.356341Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 41, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.356974Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 41, "has_content": true, "content_length": 5, "content_preview": " know", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.357201Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 41, "content_length": 5, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.357426Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 5, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.357623Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 5, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.357863Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 40, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.358150Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 5, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.358460Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 296, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" know\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.358718Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.359024Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 40, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.359146Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 42, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.376989Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 42, "has_content": true, "content_length": 5, "content_preview": " what", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.378434Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 42, "content_length": 5, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.379360Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 5, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.380191Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 5, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.380418Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 41, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.380585Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 5, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.380726Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 296, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" what\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.380919Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.381174Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 41, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.381306Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 43, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.383726Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 43, "has_content": true, "content_length": 4, "content_preview": " you", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.384370Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 43, "content_length": 4, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.384843Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 4, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.385214Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 4, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.385609Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 42, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.386048Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 4, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.386331Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 295, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" you\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.386709Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.387239Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 42, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.387697Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 44, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.423763Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 44, "has_content": true, "content_length": 5, "content_preview": " need", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.424104Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 44, "content_length": 5, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.424342Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 5, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.424519Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 5, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.424726Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 43, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.424990Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 5, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.425189Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 296, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\" need\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.425520Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.425931Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 43, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.426377Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 45, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.427146Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 45, "has_content": true, "content_length": 1, "content_preview": "!", "has_tool_calls": false, "finish_reason": null, "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.427604Z"}
{"message": "Yielding content from OpenAI adapter", "chunk_number": 45, "content_length": 1, "event": "openai_yielding_content", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.428074Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": true, "content_length": 1, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.428496Z"}
{"message": "Yielding MCP-compliant follow-up content to WebSocket", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "chunk_length": 1, "event": "mcp_follow_up_content_yielding", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.429534Z"}
{"message": "Received response from router", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 44, "response_status": "chunk", "event": "router_response_received", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.430464Z"}
{"message": "Attempting to send WebSocket response", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "response_status": "chunk", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_chunk": true, "chunk_type": "text", "chunk_data_length": 1, "has_error": false, "event": "websocket_send_attempt", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.430854Z"}
{"message": "Sending WebSocket message", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "json_length": 292, "json_preview": "{\"request_id\":\"d0c89e3a-116f-4668-958f-d9d398970b1d\",\"status\":\"chunk\",\"chunk\":{\"type\":\"text\",\"data\":\"!\",\"metadata\":{\"source\":\"openai\",\"model\":\"gpt-4o-mini\",\"type\":\"mcp_tool_execution_explanation\",\"mcp...", "event": "websocket_sending", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.431344Z"}
{"message": "WebSocket message sent successfully", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "event": "websocket_sent_successfully", "logger": "gateway.connection_manager", "level": "info", "timestamp": "2025-07-10T10:01:32.431829Z"}
{"message": "Forwarded router response to WebSocket", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "response_number": 44, "send_success": true, "event": "router_response_forwarded", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.432311Z"}
{"message": "Received chunk from OpenAI", "chunk_number": 46, "has_choices": true, "choice_count": 1, "event": "openai_chunk_received", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.485524Z"}
{"message": "Analyzing OpenAI delta", "chunk_number": 46, "has_content": false, "content_length": 0, "content_preview": null, "has_tool_calls": false, "finish_reason": "stop", "event": "openai_delta_analysis", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.487276Z"}
{"message": "OpenAI completion received", "chunk_number": 46, "finish_reason": "stop", "total_chunks_processed": 46, "remaining_scratch_calls": 0, "event": "openai_completion", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.487502Z"}
{"message": "Received follow-up response after MCP tool execution", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "has_content": false, "content_length": 0, "event": "mcp_follow_up_response_received", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.487967Z"}
{"message": "MCP-compliant follow-up conversation completed", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "finish_reason": "stop", "event": "mcp_follow_up_completion", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.488450Z"}
{"message": "Complete MCP tool execution flow finished", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "tools_executed": 2, "event": "mcp_tool_flow_completed", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.488895Z"}
{"elapsed_ms": 3759.28, "module": "unknown", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "request_type": "chat", "event": "request_processed", "logger": "router.request_router", "level": "info", "timestamp": "2025-07-10T10:01:32.489330Z"}
{"message": "Router processing completed", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "request_id": "d0c89e3a-116f-4668-958f-d9d398970b1d", "total_responses": 44, "event": "router_processing_complete", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.489899Z"}
{"elapsed_ms": 3765.49, "module": "unknown", "connection_id": "3b3eb6f4-40fb-4386-bc70-2b2e717e1ac1", "event": "message_processed", "logger": "gateway.websocket", "level": "info", "timestamp": "2025-07-10T10:01:32.490521Z"}
{"elapsed_ms": 2466.55, "module": "unknown", "model": "gpt-4o-mini", "message_count": 4, "event": "openai_chat_completion", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.491321Z"}
{"elapsed_ms": 3761.31, "module": "unknown", "model": "gpt-4o-mini", "message_count": 1, "event": "openai_chat_completion", "logger": "adapters.openai_adapter", "level": "info", "timestamp": "2025-07-10T10:01:32.492670Z"}
